version: "3.9"

services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: helpbot_db
      POSTGRES_USER: helpbot_user
      POSTGRES_PASSWORD: supersecret
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U helpbot_user -d helpbot_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    # prod'da portni ochmang; dev uchun kerak bo'lsa:
    # ports: ["5432:5432"]

  web:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    # migrate + collectstatic + gunicorn
    command: >
      bash -lc "
      python manage.py migrate --noinput &&
      python manage.py collectstatic --noinput &&
      gunicorn config.wsgi:application -b 0.0.0.0:8000 -w 4 --threads 2
      "
    volumes:
      - staticfiles:/app/staticfiles
      - mediafiles:/app/mediafiles
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8000/ || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      web:
        condition: service_started
    command: ["bash", "-lc", "python run_bot.py"]
    # agar bot media bilan ishlasa, bo'lishamiz:
    volumes:
      - mediafiles:/app/mediafiles

volumes:
  pgdata:
  staticfiles:
  mediafiles:
